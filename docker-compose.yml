version: "3.9"

volumes:
  pgdata: 
  kongadata:

networks:
  kong-net:
    driver: bridge
  test-net:
    driver: bridge

services:
  sms:
    env_file:
      - ./sms/sms.env
    build:
      context: ./sms
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    restart: on-failure
    # networks:
    #   - test-net
    container_name: sms
  
  maintenance:
    env_file:
      - ./maintenance/.env
    build:
      context: ./maintenance
      dockerfile: Dockerfile
    restart: on-failure
    ports:
    - "5000:5000"
    container_name: maintenance

  equipment:
    env_file:
      - ./equipment/.env
    build:
      context: ./equipment
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "4999:4999"
    container_name: equipment

  email:
    env_file:
      - ./email/email.env
    build:
      context: ./email
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    restart: on-failure
    # networks:
    #   - test-net
    container_name: email

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    hostname: esd-rabbit
    # networks:
    #   - test-net
    ports:
      # - "5672:5672"
      - "15672:15672"
    # networks:
    #   - test-net
    container_name: rabbitmq
    # volumes:
    #   - rabbitmq_data:/var/lib/rabbitmq

  testsend:
    build:
      context: ./rmqTestSend
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    restart: on-failure
    ports:
      - "4000:4000"
    # networks:
    #   - test-net
    container_name: testSend

  login:
    build:
      context: ./login
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "3001:3001"
    container_name: login
    env_file:
      - ./login/utils/login.env

  inventory:
    env_file:
      - ./inventory/.env
    build:
      context: ./inventory
      dockerfile: Dockerfile
    restart: on-failure
    ports:
    - "5001:5001"
    container_name: inventory
    



#######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    platform: linux/amd64
    restart: always
    # networks:
    #   - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:2.0.4
    platform: linux/amd64
    command: "kong migrations bootstrap"
    restart: on-failure
    # networks:
    #   - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:2.0.4
    platform: linux/amd64
    restart: always
    # networks:
    #   - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
    ports:
      - "8000:8000"
  
  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga
    restart: always
    # networks:
    #     - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: password
      DB_DATABASE: konga_db
    depends_on:
      - kong
    ports:
      - "1337:1337"
    volumes:
      - kongadata:/app/kongadata